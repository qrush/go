#!/bin/bash

PASSED=0
FAILED=0

function t {
  e "$1"
  test "$EVAL" = "$2"
  if [ $? = 0 ]
  then
    echo "   PASS: '$1' = '$2'"
    pass
  else
    echo "   FAIL: '$1' = '$2' WAS '$EVAL'"
    fail
  fi
}

function m {
  if [[ $EVAL =~ $1 ]]
  then
    echo "   PASS: =~ '$1'"
    pass
  else
    echo "   FAIL: '$EVAL' !~ '$1' WAS '$EVAL'"
    fail
  fi
}

function e {
  EVAL=`eval bin/dag $1 2>&1`
  echo -e ">> WITH args '$1'"
}

function pass {
  PASSED=$(($PASSED+1))
}

function fail {
  FAILED=$(($FAILED+1))
}

t "-f test/nothere" "dag: test/nothere: stat test/nothere: no such file or directory"
t "-f test/blankmkfile" "dag: test/blankmkfile: empty file"
t "" "6
dag.go
target.go
set.go
dag.6 dag.go target.go set.go
main.go
main.6 dag.6 main.go
6/dag main.6 dag.6
all 6 6/dag"
t "-f test/mksimple" "all"
t "-f test/mkoneprereq" "clean
all clean"
t "-f test/mkprereqs" "list
clean list
all clean"
t "-f test/mkcyclic" "dag: test/mkcyclic: cyclic prerequisite: test"
t "-f test/mknewlines" "all"

echo -e "\n$PASSED passed, $FAILED failed"
